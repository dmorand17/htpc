server {
    listen      80;
    listen [::]:80;
    server_name dougie-fresh.xyz dougie-fresh.us;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    #for certbot challenges (renewal process)
    location ^~ /.well-known/acme-challenge {
        allow all;
        root /var/www;
    }

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

}

server {
    server_name dougie-fresh.xyz dougie-fresh.us;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_tokens off;
    ssl_certificate /etc/letsencrypt/live/dougie-fresh.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dougie-fresh.xyz/privkey.pem;

    ssl_session_cache shared:SSL:10m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.

    ssl_buffer_size 4k;
    ssl_dhparam /etc/ssl/certs/dhparam-4096.pem;

    ssl_protocols TLSv1.3 TLSv1.2;

    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;
    #add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Set Google's public DNS servers as upstream resolver
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;


    root /var/www;
    index index.html;

    # gzip settings
    gzip on;
    gzip_min_length  256;
    gzip_buffers     16 8k;

    gzip_static on;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    location /sabnzbd {
        proxy_pass http://sabnzbd:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $remote_addr;
        proxy_set_header X-Forwarded-Protocol $scheme;
    }
    location /sonarr {
        proxy_pass http://sonarr:8989;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $remote_addr;
        proxy_set_header X-Forwarded-Protocol $scheme;
    }
    location /radarr {
        proxy_pass http://radarr:7979;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }
    # Allow the API External Access via NGINX
#    location ~ /radarr/api {
#        auth_request off;
#        proxy_pass http://radarr:7979;
#    }
    location /requests {
        proxy_pass http://ombi:3579;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $remote_addr;
        proxy_set_header X-Forwarded-Protocol $scheme;
    }
#    location /organizr {
#        proxy_pass http://organizr:80;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $remote_addr;
#        proxy_set_header X-Forwarded-Protocol $scheme;
#        proxy_redirect off;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $http_connection;
#    }
    location /plexpy {
        proxy_pass http://plexpy:8181;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $remote_addr;
        proxy_set_header X-Forwarded-Protocol $scheme;
    }

    location /portainer/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://portainer:9000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $remote_addr;
        proxy_set_header X-Forwarded-Protocol $scheme;
    }
}
